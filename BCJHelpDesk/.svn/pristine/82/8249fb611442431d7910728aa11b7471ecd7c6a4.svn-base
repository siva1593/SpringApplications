package com.crmindz.bcjmay2017.dao;

import java.util.List;

import com.crmindz.bcjmay2017.pojo.Ticket;
import com.crmindz.bcjmay2017.pojo.User;

public interface HelpDeskDAO {

	/**
	 * This method store all the user details in the database.
	 * 
	 * @param users It is the entity class that has all the information of user to be stored.
	 * @return Returns a string.
	 */
	public String saveUser(User user);
	
	/**
	 * This method verifies if users is a registered user.
	 * 
	 * @param login It has details for authenticating user.
	 * @return Returns login entity class.
	 */
	
	
	public User verifyUser(User user);
	
	
	/**
	 * This method Gets user types from static table in database.
	 * @return Returns a list of map's that has user types.
	 */
	public List<String> getUserType();
	
	
	/**
	 * This method Gets states from static table in database.
	 * @return Returns a list of map's that has states.
	 */
	public List<String> getStates() ;
	
	
	/**
	 * This method Gets category's from static table in database.
	 * @return Returns a list of map's.
	 */
	public List<String> getTicketCategoryInfo();
	
	
	/**
	 * This method Gets sub categories of a category.
	 * 
	 * @param categoryValue Has category value.
	 * @return Return's a list of map's. 
	 */
	public List<String> getTicketSubCategoryInfo(String ticketCategoryName);
	
	
	
	/**
	 * This method Saves the ticket generated by the user.
	 *  
	 * @param ticket Contains ticket details to be saved.
	 * @return Returns boolean based on the insert query.
	 */
	public boolean saveTicket(Ticket ticket, int userId);
	

	/**
	 * This method Gets the tickets generated by this user.
	 * 
	 * @param userId User Id.
	 * @return Returns a list of map's that has generated tickets.
	 */
	public List<Ticket> getTicketsListByUserId(int user_Id);
	
	/**
	 * This method Gets the new tickets generated by students or consultants for employee.
	 * @return Returns a list of map's that has new tickets.
	 */
	public List<Ticket> fetchNewTickets();
	
	
	/**
	 * This method Gets the approved tickets generated by employee.
	 * @return Returns a list of map's that has approved tickets.
	 */
	public List<Ticket> fetchApprovedTickets();
	
	
	/**
	 * This method Gets the denied tickets generated by employee.
	 * @return Returns a list of map's that has denied tickets.
	 */
	public List<Ticket> fetchDeniedTickets();
	
	
	/**
	 * This method Updates the ticket with status as approval. 
	 * 
	 * @param ticket It has the ticket details to be updated.
	 * @return Returns boolean based on the update query.
	 */
	public boolean approveTicket(Ticket ticket, int userId);
	
	
	/**
	 * This method Updates the ticket with status as rejection. 
	 * 
	 * @param ticket It has the ticket details to be updated.
	 * @return Returns boolean based on the update query.
	 */
	public boolean rejectTicket(Ticket ticket, int userId);
	
	
}
